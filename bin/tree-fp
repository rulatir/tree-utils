#!/usr/bin/env php
<?php
for($d=__DIR__;$d!=="/";$d=dirname($d)) if (is_file($f="$d/vendor/autoload.php")) { $g = require $f; break; }
if (!$g) { echo "Failed to load the autoloader. Complain to Composer authors for making it difficult."; exit(1); }

use Rulatir\Tree\Fingerprint;
use Rulatir\Tree\GlobFilter;

function parse_cmd(array $argv) : array
{
    array_shift($argv);
    while('--'===substr($argv[0],0,2)) {
        switch($opt = array_shift($argv)) {
            case "--debug":
                $debugFile = array_shift($argv);
                break;
            case "--rule-prefix":
                $rulePrefix = array_shift($argv);
                break;
        }
    }
    $repositoryRoot = array_shift($argv);
    $statefile = array_shift($argv);
    $paths = parse_paths($argv, $rulePrefix?? null);
    return [$repositoryRoot, $statefile, $paths, $debugFile ?? null];
}

function parse_paths(array $argv, ?string $rulePrefix) : array
{
    $result = [];
    while(count($argv)) {
        if ($exclude = '-n' === $path = trim(array_shift($argv))) $path = trim(array_shift($argv));
        if ($rulePrefix) $path = trim($rulePrefix,"/")."/".ltrim($path,"/");
        $result[] = [$path, $exclude];
    }
    return array_reverse($result);
}

function tree_fp(string $repositoryRoot, $stateFile, array $rules, ?string $debugFile)
{
    $filter = new GlobFilter();
    foreach($rules as $rule) {
        $filter->addRule(...$rule);
    }
    $fingerprint = new Fingerprint($repositoryRoot, $stateFile, $filter);
    echo md5(json_encode($fingerprintData = $fingerprint->getFingerprint(),JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES));
    if ($debugFile) {
        $fingerprintData['arguments'] = [
            'repositoryRoot' => $repositoryRoot,
            'statefile' => $stateFile,
            'rules' => $rules
        ];
        @mkdir(dirname($debugFile), 0755, true);
        file_put_contents($debugFile, json_encode($fingerprintData, JSON_PRETTY_PRINT|JSON_UNESCAPED_SLASHES));
    }
}

tree_fp(...parse_cmd($argv));
